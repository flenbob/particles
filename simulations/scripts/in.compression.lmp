###############################################
# Simulation set-up
###############################################
atom_modify     map yes
units           lj
dimension       3
atom_style      sphere
read_data       ${input_data}
change_box      all triclinic boundary p p p 
set             type * density 1
variable        N equal atoms

###############################################
# Simulation variables                        #
###############################################
variable        stepsize equal 25000 
variable        NPH_run equal 8000000
variable        noruns equal ceil(${NPH_run}/${stepsize})
   
#NPH variables
variable        Pext equal 1e-6                     # External pressure
variable        Pdamp equal 10000                   # Relaxation rate     
variable        Ttarget equal 1e-5                  # Target temperature

# Pair style variables
variable        E equal 5                           # Young's modulus
variable        v equal 0                           # Poissons constant
variable        COR equal 0.1                       # CoR Hertz
variable        E_eff equal ${E}/(2*(1-${v}^2))     # Effective modulus
variable        kn equal 4/3*${E_eff}               # Spring stiffness

#Hertz timestep 
variable        T0 equal 40
variable        T equal 10
variable        MR equal PI^2/18
variable        dHertz0 equal 2.865*(${MR}/(${E_eff}^2))^(1/5)/${T0}                # Initial phase timestep
variable        dHertz equal 2.865*(${MR}/(2*(v_vmax+1e-8)*${E_eff}^2))^(1/5)/${T}  # Main phase timestep

# Exit variables
variable        C equal 0.01        #Cundall parameter threshold
variable        PR equal 0.001      #Pressure ratio threshold

###############################################
# Neighbor list building                      #
############################################### 
variable        skin equal 0.5
neighbor        ${skin} multi
neigh_modify    delay 0 every 1 check yes collection/interval ${CI}
comm_modify     mode multi vel yes reduce/multi

###############################################
# Compute variables of interest
###############################################
# Misc. variables
variable        press_var equal press
variable        dense equal density
variable        stepv equal step

# Cundall parameter 
compute         forces all property/atom fx fy fz
variable        FX atom c_forces[1]
variable        FY atom c_forces[2]
variable        FZ atom c_forces[3]
variable        atom_force_sq atom v_FX^2+v_FY^2+v_FZ^2
variable        atom_force_norm atom sqrt(v_atom_force_sq)
compute         atom_force_abs all reduce sumabs v_atom_force_norm

compute         contact_forces all pair/local force cutoff radius
compute         contact_forces_total all reduce sumabs c_contact_forces
variable        cundall equal c_atom_force_abs/(2*c_contact_forces_total+1e-12)          # Sum over both particles in interactions

# Virial ratio
compute         KE all ke 
variable        ke equal c_KE
variable        vratio equal (${N}*temp/vol)/(press+1e-12)

# Number of contacts
compute         contact all contact/atom
compute         contactavg all reduce ave c_contact
variable        avgContacts equal c_contactavg

# Contact indices within force cutoff (ID for atom I and J and distance IJ)
compute         indicies all property/local patom1 patom2 cutoff radius
compute         distance all pair/local dist cutoff radius

# Largest velocity
compute         vels all property/atom vx vy vx
variable        VX atom c_vels[1]
variable        VY atom c_vels[2]
variable        VZ atom c_vels[3]
variable        vel_sq atom v_VX^2+v_VY^2+v_VZ^2
variable        vel_norm atom sqrt(v_vel_sq)
compute         vel_max all reduce max v_vel_norm
variable        vmax equal c_vel_max

# Difference in density and mean coordination
variable        phi equal density
fix             phi_vec all vector ${stepsize} v_phi
fix             contact_vec all vector ${stepsize} c_contactavg
variable        ix equal ceil(step/${stepsize})
variable        kx equal v_ix-1
#variable        dZ equal abs(f_contact_vec[v_ix]-f_contact_vec[v_kx])/f_contact_vec[v_ix]
variable        dphi equal abs(f_phi_vec[v_ix]-f_phi_vec[v_kx])

###############################################
# Dumpfiles
###############################################
# Global dump: particle id, type, position, diameter and number of contacts
dump            glob all custom ${stepsize} ${dump_global} id type x y z diameter c_contact

# Local dump: Pairwise contacts IJ and distance
dump            loc all local ${stepsize} ${dump_local} c_indicies[1] c_indicies[2] c_distance

# Scalar dump: Cundall parameter, Internal pressure, Total kinetic energy, Pressure ratio
fix             scalars all print ${stepsize} "${cundall}, ${press_var}, ${ke}, ${vratio}" file ${dump_scalar} screen no title "cundall, pressure_in, KE, PR"

###############################################
# NPH - Compression phase
###############################################
# Hertz contact model
pair_style      granular
pair_coeff      * * hertz ${kn} ${COR} tangential linear_nohistory 1 0 damping tsuji

#Initial phase with small timestep dHertz0
thermo_style    custom step press temp density c_contactavg v_cundall v_vratio v_dHertz v_vmax
thermo          ${stepsize}
fix             NPH all nph/sphere  x ${Pext} ${Pext} ${Pdamp} &
                                    y ${Pext} ${Pext} ${Pdamp} &
                                    z ${Pext} ${Pext} ${Pdamp} &
                                    xy 0.0 0.0 ${Pdamp} &
                                    yz 0.0 0.0 ${Pdamp} &
                                    xz 0.0 0.0 ${Pdamp} &
                                    nreset 1 pchain 0 ptemp ${Ttarget}

timestep        ${dHertz0}
run             100000

#Phase with adaptive timestep dHertz
thermo_style    custom step press temp density v_dphi c_contactavg v_cundall v_vratio v_dHertz v_vmax
thermo          ${stepsize}

variable        exit equal (v_cundall<${C})&&(v_vratio<${PR})
variable        iter loop ${noruns}
label           startiter   
timestep        ${dHertz}    
run             ${stepsize}
if (${exit}==1) then "jump ${self} stopiter" #"jump in.compression.lmp coh" 

next            iter
jump            ${self} startiter #in.compression.lmp comp 
label           stopiter

unfix           NPH #End compression phase

#Write restart file to allow starting at adhesion phase instead
variable        out_restart string "./simulations/data/restart/adhesion_restart.dump" 
write_restart   ${out_restart}